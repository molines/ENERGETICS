#!/bin/bash

# This script is used to check time.step in a runing directory
# class = @Run progression tools@

usage() {
     echo
     echo "USAGE: $(basename $0) [-h] [-d delay ] "
     echo
     echo "  PURPOSE:"
     echo "      Display the evolution of time step to check if the run progresses"
     echo "      smoothly. If run stop or too slow, a RED warning is dipslayed."
     echo
     echo "  ARGUMENTS:"
     echo "      No arguments. Default delay is $delay seconds."
     echo
     echo "  OPTIONS:"
     echo "     -h : this help page "
     echo "     -d delay : specify a delay (s) between each check "
     echo "                default is " $delay " seconds."
     echo "                decimal numbers can be used (eg 0.5 for 1/2 seconds)"
     echo
     exit 0
        }

LookInNamelist()    {
   eval grep -e $1 $NAMELIST | tr -d \' | tr -d \"  \
   | sed -e 's/=/  = /' \
   | awk ' {if ( $1 == str ) print $3 }' str=$1
                    }

TIMESTEP=time.step
NAMELIST=namelist
here=$(pwd)
if [ $( basename $here) = CTL ] ; then 
  CONFCASE=$( basename $(dirname $here))
  DDIR=${DDIR:-$CDIR}
  TIMESTEP=$DDIR/TMPDIR_${CONFCASE}/time.step
  NAMELIST=namelist.${CONFCASE}
fi

delay=5  # seconds default delay

while getopts :hd: opt ; do
  case $opt in 
    (h) usage ;;
    (d) delay=${OPTARG} ;;
   esac
done

nit000=$( tail -1 *.db | awk '{print $2}' )
nitend=$( tail -1 *.db | awk '{print $3}' )
nwrite=$(LookInNamelist nn_write)
rn_rdt=$(   LookInNamelist rn_rdt | sed -e 's/\.//' )
nstpday=$(( 86400 / $rn_rdt))

if [ -f znitend.txt ] ; then  # change nitend by its real value
   newval=$(cat znitend.txt)
   # newnitend is computed as in NEMO
   nitend=$( echo $nit000 $newval $nwrite \
           | awk '{ print $1 - 1 + int( ( $2 - $1 ) / $3 +1 ) * $3 }')
fi

echo Check time.step of current run with delay of $delay seconds
echo Type ^C to interupt this script !
echo

badcount=0
oldrstep=0
go='1'
while [ $go ] ; do 
   step=$(cat $TIMESTEP) ;
   rstep=$(echo $step $nit000 | awk '{ print $1 - $2 + 1 }' )
   rwri=$(echo $rstep $nwrite | awk '{ print $1 / $2 }' )
   rday=$( echo $rstep $nstpday | awk '{ print $1 / $2 }' )
   cdate=$(grep DATE ocean.output | tail -1 | awk '{ print $10}')
   if [ $oldrstep = $rstep ] ; then
     # use red for rstep to alert for standing run
     badcount=$(( badcount + 1 ))
     if (( $badcount > 10 )) ; then 
       printf "\033[31m%5d\033[0m %5d / %5d : %5.2f \033[31;1;5mPROBLEM\033[0m\r" $rstep $step $nitend $rday
     else
       printf "\033[31m%5d\033[0m %5d / %5d : %5.2f %s\r" $rstep $step $nitend $rday $cdate
     fi
   else
     # use green for rstep : OK
     badcount=0
     printf "\033[32m%5d\033[0m %5d / %5d : %5.2f %s      \r" $rstep $step $nitend $rday $cdate
   fi
   oldrstep=$rstep
   sleep $delay 
   if [[ $step -ge $nitend  ]] ; then
      go=''
      printf "\033[32;1m%5d\033[0m %5d / %5d : %5.2f \033[32;1mRUN COMPLETED\033[0m\n" $rstep $step $nitend $rday
   fi
done


#printf "\033[38mHello world\033[0m\n"

exit
Sets multiple display attribute settings. The following lists standard attributes:

0	Reset all attributes
1	Bright
2	Dim
4	Underscore	
5	Blink
7	Reverse
8	Hidden

	Foreground Colours
30	Black
31	Red
32	Green
33	Yellow
34	Blue
35	Magenta
36	Cyan
37	White

	Background Colours
40	Black
41	Red
42	Green
43	Yellow
44	Blue
45	Magenta
46	Cyan
47	White

